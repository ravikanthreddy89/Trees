This is my practise repo for Binary Tree. I've listed the API calls below to add code on top of that. 
I would really appreciate any feedback. Thank you.

Classes and their roles 
======================================

BinaryTree : ****************Please take a look at this file, I've included some figures.************
             The core class that implements BinarySearchTree and all other functions.
             
Node       : Class that defines a node in binary search tree.

Test2      : A class to test the binary search tree(with key of type "Integer" and value of type "String") 
             manually with commands. Once you run this class it prints commands and what they do.

TestCases2 : Contains two test cases I used to test the implementation.

typescript : A small terminal session of my testing captured with script command. I used the tree shown below.

                    13
                   /  \
                  /    \
                 /      \
                6        14
               / \         \
              /   \         \
             4     11        15
            / \    / \
           3   5  9  12    
            

API
=============

-> insert(Key key, Value val)

-> get(Key key)

->del(Key key) [Hibbard deletion]

->iterator()

->delMin()

->convert2DLL() : Converts the whole tree into a doubly linked list. 

->levelOrder() : Prints the level order traversal of tree

->dist(Key k1,Key k2) : returns the distance between two nodes.












